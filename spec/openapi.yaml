openapi: 3.0.0
info:
  version: '1.0.0' # API version

  title: Effective Dates # API Title
  x-logo:
    url: 'https://apis.guru/openapi-template/logo.png' #Company Logo

  #API Description
  description: |
    This Effective Dates API takes in an Event date and/or a references date (if reference date is not provided then the current date will be used as reference), and it returns an effective date and/or dates.
    This API uses LocalDate(http://www.https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html) from Java SE 8 as the date object.
    To use this LocalDate correctly, the URL parameter needs to be formatted like "YYYY-MM-DD" (an example is 2019-01-01 <- if it is a single digit it needs a 0 infront of it.)
    If you have any questions please feel free to reach out.


# A list of tags used by the specification with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: EDO
    description: Operations for different options of getting the effective date

servers:
  - url: 'localhost:8080/api/v1'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL.
paths:
  '/u65/ged/{EventDate}': # path parameter in curly braces

    # parameters list that are used with each operation for this path
    parameters:
      - name: eventDate
        in: query
        description: General effective date response
        schema:
          type: LocalDate
    get: # documentation for GET operation for this path
      tags:
        - EDO

      # summary is up to 120 symbold but we recommend to be shortest as possible
      summary: Get the general effective date based on event date.

      # you can use GFM in operation description too: https://guides.github.com/features/mastering-markdown
      description: |
        Some description of the operation.
        You can use `markdown` here.

      # operationId should be unique across the whole specification
      operationId: getEDByEventDate

      # list of parameters for the operation
      parameters:
        - name: date
          in: path
          description: The event date that needs effective dates for
          required: true
          schema:
            type: string
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/EDO'
              example: '2019-08-06', []
                date: '2019-07-06'
        '403':
          description: Forbidden
        '404':
          description: User not found

# An object to hold reusable parts that can be used across the spec
components:
  schemas:
    EDO:
      type: object
      properties:
        date:
          description: Effective date for eventDate
          type: object
          example: '2019-08-05'
        dates:
          description: Multiple effective dates based on reasons
          type: array
          example: '[2019-07-06, 2019-08-01]'

  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time

    basic_auth: # security definition name (you can name it as you want)
      type: http
      scheme: basic
